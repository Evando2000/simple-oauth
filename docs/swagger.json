{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/resource": {
            "post": {
                "description": "This function will return the resource if user is authorized",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "get resource if authorized",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Please insert access_token",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TokenInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.FailedResponse"
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "description": "This function will create new access_token and refresh_token if existing user does not have both. It will return current access_token and refresh_token if user's access_token or refresh_token is not expired yet.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "get access token and refresh token",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert grant_type",
                        "name": "grant_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert client_id",
                        "name": "client_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert client_secret",
                        "name": "client_secret",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TokenInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.FailedResponse"
                        }
                    }
                }
            }
        },
        "/token/refresh": {
            "post": {
                "description": "This function will create new access_token and refresh_token if refresh_token is still valid. If new tokens are created then old tokens will be deleted",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "will create new access_token and refresh_token if refresh_token is valid",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert refresh_token",
                        "name": "refresh_token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TokenInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.FailedResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "This function will create a new user if does not exist. It will also create user's access_token with refresh_token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "register new user and get access token with refresh token",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert full_name",
                        "name": "full_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert npm",
                        "name": "npm",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert client_id",
                        "name": "client_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Please insert client_secret",
                        "name": "client_secret",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TokenInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.FailedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.FailedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "main.TokenInfoResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        }
    }
}